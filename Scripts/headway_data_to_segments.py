# -*- coding: utf-8 -*-
"""Headway data to Segments.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BwVFp3Jf--uC6w5Fgj8jjukjKY4LDPfP

# Convert Headway data format to segment pairs
"""

import pandas as pd
import datetime as dt
import urllib.request
import zipfile
import re
from geopy.distance import vincenty

url = 'http://web.mta.info/developers/files/google_transit_supplemented.zip'
urllib.request.urlretrieve (url, "GTFS_nyc_Subway.zip")

zip_ref = zipfile.ZipFile("GTFS_nyc_Subway.zip", 'r')
zip_ref.extractall("GTFS_nyc_Subway")
zip_ref.close()

stops = pd.read_csv('/content/GTFS_nyc_Subway/stops.txt')
stop_times = pd.read_csv('/content/GTFS_nyc_Subway/stop_times.txt')
trips = pd.read_csv('/content/GTFS_nyc_Subway/trips.txt')
calendar_dates = pd.read_csv('/content/GTFS_nyc_Subway/calendar_dates.txt')

calendar_dates = calendar_dates.loc[calendar_dates['service_id'].drop_duplicates().index]

data = stop_times.merge(trips,how = 'left',left_on = 'trip_id',right_on = 'trip_id')

data = data.merge(calendar_dates,how = 'left',left_on = 'service_id',right_on = 'service_id')
data.head()

import re
data['arrival_time'] = data['arrival_time'].apply(lambda x: re.sub('^24','00',str(x)))
data['arrival_time'] = data['arrival_time'].apply(lambda x: re.sub('^25','01',str(x)))
data['arrival_time'] = data['arrival_time'].apply(lambda x: re.sub('^26','02',str(x)))
data['arrival_time'] = data['arrival_time'].apply(lambda x: re.sub('^27','03',str(x)))

data = data.dropna()

data['time'] = data['date'].apply(lambda x: str(int(x)))+' '+data['arrival_time']

data['time'] = pd.to_datetime(data['time'],infer_datetime_format=True)

data = data.drop(columns = ['arrival_time','departure_time','date','exception_type'])

data = data.merge(stops[['stop_id','stop_name','stop_lat','stop_lon']],how = 'left',left_on = 'stop_id',right_on = 'stop_id')
data.head()

seg = pd.DataFrame()

seg['starttime'] = data['time'].shift(1)
seg['stoptime'] = data['time']

seg['start station id'] = data['stop_id'].shift(1)
seg['end station id'] = data['stop_id']

seg['start station latitude'] = data['stop_lat'].shift(1)
seg['start station longitude'] = data['stop_lon'].shift(1)
seg['end station latitude'] = data['stop_lat']
seg['end station longitude'] = data['stop_lon']

seg['start station name'] = data['stop_name'].shift(1)
seg['end station name'] = data['stop_name']

seg['start trip id'] = data['trip_id'].shift(1)
seg['end trip id'] = data['trip_id']

seg = seg.drop(index = seg.loc[seg['start trip id'] != seg['end trip id']].index)

seg['tripid'] = seg['start trip id']

seg = seg.drop(columns = ['start trip id','end trip id'])
seg['tripduration'] = seg['stoptime'] - seg['starttime']

seg

seg['tripduration'] = seg['tripduration'].dt.seconds

seg

